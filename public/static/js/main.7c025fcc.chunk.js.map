{"version":3,"sources":["Components/Login.js","Components/Header.js","Components/Home.js","Components/Register.js","Components/Play.js","Components/YouLost.js","Components/YouWin.js","Components/HowTo.js","Components/Leaderboards.js","audio/lofi-study-112191.mp3","App.js","index.js"],"names":["Login","username","setUsername","password","setPassword","setCurrentUser","setIsAuthenticated","setErrors","errors","navigate","useNavigate","style","textAlign","className","onSubmit","event","preventDefault","player","fetch","method","headers","body","JSON","stringify","then","res","json","user","chances","console","log","for","id","type","background","onChange","e","target","value","required","marginTop","border","marginLeft","marginBottom","href","Header","isAuthenticated","color","onClick","ok","visibility","Home","Register","useState","score","streak","name","exception","slice","length","Play","currentUser","random","music","setRandom","input","setInput","words","setWords","setChances","setStreak","response","setResponse","gameClock","setGameClock","addUserInput","submitAnswer","answer","data","unusedWords","filter","Math","floor","useEffect","gameTimer","setTimeout","clearTimeout","timer","scrambled","split","map","letter","initial_hint","hint1","hint2","hint3","cursor","height","width","readOnly","key","YouLost","YouWin","HowTo","Leaderboards","userRankings","setUserRankings","margin","ranking","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c025fcc.chunk.js","sourcesContent":["import { useNavigate } from 'react-router-dom'\n\n\nfunction Login ({username, setUsername, password, setPassword,setCurrentUser, setIsAuthenticated, setErrors, errors}){\n  \n\n  \n\n let navigate = useNavigate()\n\n    function handleUsername(e){\n        setUsername(e.target.value)\n    }\n\n    function handlePassword(e){\n        setPassword(e.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const player = {\n            username: username,\n            password: password\n        }\n        fetch(`/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(player),\n        }).then((res) => {\n          res.json().then((user) => {\n              if (user.chances === 3) {\n                setCurrentUser(user);\n                setIsAuthenticated(true)\n                navigate('/play')\n                console.log(user)\n              } else {\n                  console.log(errors)\n                  setErrors(\"Invalid Username or Password\");\n                  setCurrentUser(null);\n                  setIsAuthenticated(false)\n                  navigate('/login')\n              }\n            });\n        });\n      };\n\n    return(\n      <>\n        <div>\n            <h1 style={{textAlign: 'center'}}>Welcome to Pop Word!</h1>\n        <div className=\"login\">\n           <form className=\"login-form\" onSubmit={handleSubmit}>\n                <label for=\"username\" id=\"username\">Username: </label>\n                <input type=\"text\" style={{background: 'rgba(250, 250, 250, 0.171)'}} onChange={handleUsername} value={username} required/>\n                <br></br>\n                <label for=\"password\" id=\"password\" >Password: </label>\n                <input type=\"password\" style={{marginTop: \"5%\", background: 'rgba(250, 250, 250, 0.171)'}} onChange={handlePassword} value={password}/>\n                <br></br>\n                <button type=\"submit\" style={{border: 'none', background: \"rgba(250, 250, 250, 0.171)\", marginLeft: \"33%\",marginTop: \"5%\", marginBottom: \"5%\"}}>Login</button>\n                <br></br>\n                <a href=\"/register\">Need an account? Click here to register!</a>\n           </form>\n        </div>\n        </div>\n        <>\n        <p className='login-errors'>{errors}</p>\n        </>\n      </>\n    )\n}\n\nexport default Login;","import { useNavigate } from 'react-router-dom'\n\n\nfunction Header({isAuthenticated, setCurrentUser, setIsAuthenticated}){\nlet navigate = useNavigate()\n    const handleLogout = () => {\n        fetch('/logout', {method: \"DELETE\"})\n        .then(res => {\n              if (res.ok) {\n                  navigate('/login')\n                }\n                setCurrentUser(null)\n                setIsAuthenticated(false)\n            })\n      }\n\n    return (\n        \n        <div className=\"header\">\n            <a href=\"/\" style={{color: 'rgb(0, 236, 205)'}} className=\"nav\">Home</a>\n            { !isAuthenticated ? \n            \n            <a href=\"/login\" style={{color: 'rgb(0, 236, 205)'}} id=\"login\" className=\"nav\">Login</a> \n            \n            : \n            \n            <a href=\"/login\" style={{color: 'rgb(0, 236, 205)'}} id=\"login\" className=\"nav\" onClick={handleLogout}>Logout</a>\n\n            }\n            <a href=\"/play\" style={isAuthenticated ? {color: 'rgb(0, 236, 205)', marginLeft: \"20%\"} : {visibility: 'hidden'}} className=\"nav\" id=\"play\">Play</a>\n            <a href=\"/leaderboards\" style={{color: 'rgb(0, 236, 205)'}} className=\"nav\">Leaderboards</a> \n        </div>\n            \n        \n    )\n}\n\nexport default Header;","\n\n\nfunction Home(){\n    return(\n        <div className=\"home\">\n            <h1>Welcome to Pop Word!</h1>\n            <h2>How to Play:</h2>\n            <h3>You have 60 seconds to try to unscramble the given letters into it's actual word.</h3>\n            <h3>You are given three chances by default and they do NOT refill.</h3>\n            <h3>The faster you decipher the scrambled word gets you more points!</h3>\n            <h3>Good Luck!</h3>\n        </div>\n    )\n}\n\nexport default Home;","import { useNavigate } from 'react-router-dom'\nimport { useState } from 'react'\n\n\n\nfunction Register({username, setUsername, password, setPassword}){\n\n  const [errors, setErrors] = useState([])\n\n    let navigate = useNavigate()\n    \n    function handleName(e){\n        setUsername(e.target.value)\n    }\n\n    function handlePass(e){\n        setPassword(e.target.value)\n    }\n\n\n    function register(e){\n        e.preventDefault()\n        let user = {\n            username: username,\n            password: password,\n            chances: 3,\n            score: 0,\n            streak: 0\n        }\n        fetch('/users', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n        .then((res) => {\n            if (res.ok) {\n              res.json().then((user) => {\n                \n               // setCurrentUser(user);\n                navigate('/login')\n              });\n            } else {\n              res.json().then((errors) => {\n                setErrors(errors);\n              });\n            }\n          });\n    }\n  \n\n    return(\n        <>\n        <div className=\"register\">\n            <form className=\"register-form\" onSubmit={register}>\n                <h2>Sign Up</h2>\n                <label for=\"username\" id=\"username\">Username: </label>\n                <input type=\"text\" style={{background: 'rgba(250, 250, 250, 0.171)'}} name=\"username\" onChange={handleName} value={username} required/>\n                <br></br>\n                <label for=\"password\" id=\"password\" style={{marginTop: \"5%\"}}>Password: </label>\n                <input type=\"password\" style={{background: 'rgba(250, 250, 250, 0.171)'}} name=\"password\" onChange={handlePass} value={password} required/>\n                <br></br>\n                <label for=\"password-confirmation\" style={{marginTop: \"5%\" }}>Confirm Password: </label>\n                <input type=\"password\" style={{background: 'rgba(250, 250, 250, 0.171)'}} required/>\n                <br></br>\n                <button type=\"submit\" style={{border: 'none', background: \"rgba(250, 250, 250, 0.171)\", marginLeft: \"33%\",marginTop: \"5%\", marginBottom: \"5%\"}}>Register</button>\n                <br></br>\n           </form>\n        </div>\n        <>\n           <p className='errors'>{errors?.exception?.slice(50, errors?.exception?.length - 1)}</p>\n        </>\n        </>\n    )\n}\n\nexport default Register;","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\n\nfunction Play({currentUser, music, random, setRandom}){\nlet navigate = useNavigate()\n    const [input, setInput] = useState([])\n    const [words, setWords] = useState([])\n    const [chances, setChances] = useState(3)\n    const [streak, setStreak] = useState(0)\n    const [response, setResponse] = useState('')\n    const [gameClock, setGameClock] = useState(60)\n   \n    \n    useEffect(() => {\n        fetch('/words')\n        .then(res => res.json())\n        .then(data => setWords(data))\n      },[])\n    \n    useEffect(() => {\n        setRandom(words[Math.floor(Math.random() * words.length)])\n    }, [words, setRandom])\n\n    \n\n    useEffect(() => {\n        const gameTimer = setTimeout(() => {\n            if (gameClock > 0 ){\n                setGameClock(gameClock => gameClock - 1)\n            } else if (gameClock === 0 && chances > 0){\n                setChances(chances => chances - 1)\n                setGameClock(60)\n            } else if (chances === 0 && gameClock === 0) {\n                navigate('/YouLost')\n            }\n           \n        }, 1000)\n        return () => clearTimeout(gameTimer)\n    }, )\n\n\n    useEffect(() => {\n  const timer = setTimeout(() => {\n    return setResponse('')\n  }, 3000);\n  return () => clearTimeout(timer);\n}, [submitAnswer]);\n\n\n    useEffect(() => {\n        if (chances < 0){\n            navigate('/YouLost')\n        }\n    }, [navigate, chances])\n\n\n    \n    const keyBoardTop = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"]\n    const keyBoardMiddle = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"]\n    const keyBoardBottom = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"]\n\n    function onPressBackspace() {\n      setInput('')\n    }\n    function addUserInput(e){\n        setInput(input + e.target.id)\n    }\n    \n    \n    function submitAnswer(e){\n        e.preventDefault()\n        let score = gameClock > 45 && chances === 3 ? 1000 : gameClock > 30 && chances > 1 ? 750 : gameClock > 15 && chances > 0 ? 500 : gameClock > 0 && chances === 0 ? 250 : navigate('/YouLost') \n        if (input !== random?.answer){\n            setChances(chances => chances - 1)\n            setInput('')\n            setStreak(0)\n            setResponse(\"Incorrect answer try again!\")\n        } else if(chances < 0){\n            navigate('/YouLost')\n        } else {\n            fetch(`/scores/${currentUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    score: currentUser.score += score,\n                    streak: streak > currentUser.streak ? streak : currentUser.streak\n                })\n            })\n            .then(res => res.json())\n            .then(data => {\n                const unusedWords = words?.filter(data => data.answer !== input)\n                setRandom(unusedWords[Math.floor(Math.random() * unusedWords.length)])\n            })\n            setStreak(streak => streak + 1)\n            //setRandom(words[Math.floor(Math.random() * words.length)])\n            setInput('')\n            setResponse(\"That was the correct answer, well done!\")\n            setGameClock(60)\n            console.log(currentUser?.score)\n        }\n    }\n\n    \n    return(\n        <div className=\"play\">\n            <h2 style={{marginLeft: \"10%\"}}>Welcome, {currentUser?.username}!</h2>\n            <div className=\"game-board\">\n                <div className=\"scores\">\n                    <h3 style={{marginLeft: \"5%\"}}>Lifetime Score: {currentUser?.score}</h3>\n                    <h3 style={{marginLeft: \"5%\"}}>Chances: {chances}</h3>\n                    <h3 style={{marginLeft: \"5%\"}}>Streak: {streak}</h3>\n                    <h3 style={{marginLeft: \"5%\"}}>Longest Streak: {currentUser?.streak > streak ? currentUser.streak : streak}</h3>\n                    <h3 style={{marginLeft: \"5%\"}}>Time Remaining: {gameClock}</h3>\n                </div>\n                \n                <div className=\"word\">\n                     \n                {random?.scrambled?.split('').map((letter) => {\n                    return(\n                        <h2 className=\"word-keys\" key={letter.id}>{letter}</h2>\n                    )\n                })}\n                    \n                </div>\n                <div className='hint'>\n                    Hint: {chances === 3 ? random?.initial_hint : chances === 2 ? random?.hint1 : chances === 1 ? random?.hint2 : random?.hint3}\n                    <br></br>\n                    <p style={{color: \"white\"}}>{response}</p>\n                </div>\n                <div className=\"user-answer\">\n                <form onSubmit={submitAnswer}>\n                \n                    <input type=\"text\" style={{border: 'none', background: \"rgba(250, 250, 250, 0.171)\", cursor: 'default', height: \"50px\", width: \"200px\"}} value={input} readOnly/>\n                \n                <button type=\"submit\" style={{border: 'none', background: \"rgba(250, 250, 250, 0.171)\", height: \"50px\", width: \"200px\", marginLeft: '20px'}}>Check your Answer!</button>\n                </form>\n                </div>\n                <div className=\"keyboard\">\n                    <div className=\"top\" >\n                    {keyBoardTop.map((key) => {\n                        return(\n                            <h2 className=\"key\" onClick={addUserInput} value={key} id={key}>{key}</h2>\n                            )\n                        })}\n                    </div>\n                    <div className=\"mid\">\n                    {keyBoardMiddle.map((key) => {\n                        return(\n                            <h2 className=\"key\" onClick={addUserInput} value={key} id={key}>{key}</h2>\n                            )\n                        })}\n                    </div>\n                    <div className=\"bottom\">\n                    {keyBoardBottom.map((key) => {\n                        return(\n                            <h2 className=\"key\" onClick={addUserInput} value={key} id={key}>{key}</h2>\n                            )\n                        })}\n                    </div>\n                    <div className=\"backspace\">\n                            <h2 className=\"key\" onClick={onPressBackspace}>⬅</h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Play;","\n\nfunction YouLost() {\n    return(\n      <div className=\"sorry\">\n        <h1>You used up all of your chances! You can give it another shot by clicking <a href=\"/play\">here!</a></h1>\n        <br></br>\n        <h1>Or if your done playing click <a href='/'>here</a> to return home.</h1>\n      </div>  \n    )\n}\n\nexport default YouLost;","\n\nfunction YouWin () {\n\n\n    return (\n        <div className=\"winner\">\n            <h1>Wow You actually guessed right click <a href=\"/play\">here</a> to play again.</h1>\n            <h1>or click <a href=\"/\">here</a> to return home.</h1>\n        </div>\n    )\n}\n\nexport default YouWin;","function HowTo (){\n    return (\n        <div className=\"howTo\"></div>\n    )\n}\n\nexport default HowTo;","import { useState, useEffect } from 'react'\n\nfunction Leaderboards({currentUser}){\n    const [userRankings, setUserRankings] = useState([])\n    useEffect(() => {\n        fetch('/users')\n        .then(res => res.json())\n        .then(data => setUserRankings(data))\n       \n      }, [currentUser])\n  \n    return(\n        <div className=\"leaderboards\">\n            <h1 style={{margin: '0 auto', textAlign: 'center'}}>All time rankings</h1>\n            <div className='rankings'>\n\n                {userRankings.map((ranking) => {\n                    return(\n\n                    <div className=\"ranking-item\">\n                        \n                            <ul>\n                                <h3>{ranking.username}</h3>\n                                 <h3>Total points: {ranking.score}</h3>\n                            </ul>\n                        \n                    </div>\n\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboards;","export default __webpack_public_path__ + \"static/media/lofi-study-112191.971be2d4.mp3\";","import './App.css';\nimport Login from './Components/Login';\nimport Header from './Components/Header';\nimport Home from './Components/Home'\nimport Register from './Components/Register';\nimport Play from './Components/Play';\nimport YouLost from './Components/YouLost';\nimport YouWin from './Components/YouWin';\nimport HowTo from './Components/HowTo';\nimport Leaderboards from './Components/Leaderboards';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport music from './audio/lofi-study-112191.mp3'\n\nfunction App() {\n\n  // const [words, setWords] = useState([])\n  const [currentUser, setCurrentUser] = useState(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState('')\n  const [random, setRandom] = useState([])\n  \n\n  useEffect(() => {\n    fetch('/me')\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then((user) => {\n          setIsAuthenticated(true);\n          setCurrentUser(user);\n          \n        });\n      }\n    });\n  }, []);\n  \n   \n\n   \n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Header isAuthenticated={isAuthenticated} setCurrentUser={setCurrentUser} setIsAuthenticated={setIsAuthenticated}/>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/login\" element={<Login errors={errors} username={username} setUsername={setUsername} password={password} setPassword={setPassword} setCurrentUser={setCurrentUser} setIsAuthenticated={setIsAuthenticated} setErrors={setErrors}/>} />\n        <Route path=\"/register\" element={<Register username={username} setUsername={setUsername} password={password} setPassword={setPassword}/>} />\n        <Route path=\"/play\" element={<Play  currentUser={currentUser} music={music} random={random} setRandom={setRandom}/>} />\n        <Route path=\"/YouLost\" element={<YouLost />} />\n        <Route path=\"/YouWin\" element={<YouWin />} />\n        <Route path=\"/leaderboards\" element={<Leaderboards currentUser={currentUser}/>} />\n        <Route path=\"/how_to_play\" element={<HowTo />} />\n      </Routes>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}